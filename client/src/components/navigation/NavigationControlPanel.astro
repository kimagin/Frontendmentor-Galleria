---
import NavigationButton from "./NavigationButton.astro";
---

<div class="h-[96px] flex bg-white z-50">
  <!-- Progress Bar Handle -->
  <!-- @TODO: Javascript for the w-[20%] -->
  <span
    class="progress h-[1.2px] bg-black absolute bottom-0 left-0 -translate-y-[96px] origin-left z-30"
  ></span>
  <!-- Progress Bar Placeholder -->
  <span
    class="w-screen h-[1.2px] bg-neutral-300 absolute bottom-0 left-0 -translate-y-[96px]"
  ></span>

  <!-- Current Image Information-->

  <div class="flex w-full justify-between">
    <!-- Navigation Controls -->
    <div class="flex flex-col gap-2 justify-center">
      <h3 class="title"></h3>
      <p class="subhead2 subtitle"></p>
    </div>
    <div class="flex gap-8">
      <!-- Next Slide -->
      <NavigationButton backward />
      <NavigationButton forward />
      <!-- Previous Slide -->
    </div>
  </div>
</div>

<script is:inline>
const information = document.getElementsByTagName("section")[0];
const title = document.querySelector(".title");
const subtitle = document.querySelector(".subtitle");
const progressBar = document.querySelector(".progress");
const SERVER = import.meta.env.SERVER;

//Slugify String
const slugify = (input) => {
  let str = input;
  var from =
    "ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑŃÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽŻáäâàãåčçćďéěëèêẽĕȇíìîïňñńóöòôõøðřŕšťúůüùûýÿžżþÞĐđßÆa·/_,:;";
  var to =
    "AAAAAACCCDEEEEEEEEIIIINNNOOOOOORRSTUUUUUYYZZaaaaaacccdeeeeeeeeiiiinnnooooooorrstuuuuuyyzzbBDdBAa------";
  for (var i = 0, l = from.length; i < l; i++) {
    str = str.replace(new RegExp(from.charAt(i), "g"), to.charAt(i));
  }
  return str
    .toLowerCase()
    .trim()
    .replace(/[^\w\s-]/g, "")
    .replace(/[\s_-]+/g, "-")
    .replace(/^-+|-+$/g, "");
};

document.addEventListener("DOMContentLoaded", async () => {
  // dataBase
  res = await fetch(SERVER + "assets/imagedata.json");
  const dataBase = await res.json();

  // Current Image data
  const currentImage = dataBase.filter((data) => {
    return data.name === information.dataset.name;
  });

  // Find next and previous image links
  const index = dataBase.findIndex(
    (obj) => obj.name === currentImage[0].name
  );

  let prevObject, nextObject;

  if (index !== -1) {
    const prevIndex = index - 1 >= 0 ? index - 1 : null;
    const nextIndex = index + 1 < dataBase.length ? index + 1 : null;
    prevObject = prevIndex !== null ? dataBase[prevIndex] : null;
    nextObject = nextIndex !== null ? dataBase[nextIndex] : null;
  }
  const prevLink = prevObject !== null ? slugify(prevObject.name) : "/";
  const nextLink = nextObject !== null ? slugify(nextObject.name) : "/";
  console.log(prevLink, nextLink);

  //Populating the Dom
  title.textContent = currentImage[0].name;
  subtitle.textContent = currentImage[0].artist.name;

  let w = 0;
  let progressInterval;
  const duration = 500000; // 20 seconds in milliseconds
  const startTime = Date.now();

  progressInterval = setInterval(() => {
    const elapsedTime = Date.now() - startTime;
    if (elapsedTime >= duration) {
      clearInterval(progressInterval);

      window.location.href = nextLink;

      w = 0;
    } else {
      w = (elapsedTime / duration) * 100;
    }
    progressBar.style.width = `${w}%`;
  }, 1);

  //Media Buttons
  const prev = document.getElementById("prev");
  const next = document.getElementById("next");

  if (prevObject === null) {
    prev.classList.add("disabled");
  } else {
    prev.addEventListener("click", () => (window.location.href = prevLink));
  }
  if (nextObject === null) {
    next.classList.add("disabled");
  } else {
    next.addEventListener("click", () => (window.location.href = nextLink));
  }
});
</script>
